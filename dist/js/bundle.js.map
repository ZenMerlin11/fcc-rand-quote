{"version":3,"sources":["webpack:///dist/js/bundle.js","webpack:///webpack/bootstrap 590b1e4898d01b29cfab","webpack:///./src/app.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","getJSON","url","xhr","XMLHttpRequest","open","responseType","onreadystatechange","handleXhrResponse","send","readyState","response","alert","status","quoteData","updateQuote","getRandomInt","min","max","Math","ceil","floor","random","undefined","index","quote","author","length","prevQuoteIndex","hasOwnProperty","content","title","renderQuoteToDOM","updateTweetLink","elem","document","getElementById","innerHTML","concat","createElement","textContent","setAttribute","twitterLink","init","quoteURL","addEventListener","window","onload"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,GExCvB,QAAAQ,GAAAC,GACA,GAAAC,GAAA,GAAAC,eACAD,GAAAE,KAAA,MAAAH,GAAA,GACAC,EAAAG,aAAA,OACAH,EAAAI,mBAAA,WACAC,EAAAL,IAEAA,EAAAM,OAEA,QAAAD,GAAAL,GAEA,GAAAA,EAAAO,aAIA,MAAAP,EAAAQ,UACAC,MAAA,kCAEA,KAAAT,EAAAU,QACAD,MAAA,iBAAAT,EAAAU,QAGAC,EAAAX,EAAAQ,SACAI,KAEA,QAAAC,GAAAC,EAAAC,GAGA,MAFAD,GAAAE,KAAAC,KAAAH,GACAC,EAAAC,KAAAE,MAAAH,GACAC,KAAAE,MAAAF,KAAAG,UAAAJ,EAAAD,MAEA,QAAAF,KAEA,UAAAD,GAAAS,SAAAT,EAEA,WADAF,OAAA,wBAIA,IAAAY,GAAAC,EAAAC,CAEA,GACAF,GAAAR,EAAA,EAAAF,EAAAa,cACKH,IAAAI,EACLA,GAAAJ,EAEAV,EAAAU,GAAAK,eAAA,YACAf,EAAAU,GAAAK,eAAA,WACAJ,EAAAX,EAAAU,GAAAM,QACAJ,EAAAZ,EAAAU,GAAAO,MACAC,EAAAP,EAAAC,GACAO,EAAAR,EAAAC,IAGA,QAAAM,GAAAP,EAAAC,GAEA,GAAAQ,EACAA,GAAAC,SAAAC,eAAA,SACAF,EAAAG,UAAAZ,EACAS,EAAAC,SAAAC,eAAA,gBACAF,EAAAG,UAAA,gBAAAC,OAAAZ,GAAAY,OAAA,kBAEA,QAAAL,GAAAR,EAAAC,GAEA,GAAAQ,EAEAA,GAAAC,SAAAI,cAAA,OACAL,EAAAG,UAAAZ,EACAA,EAAAS,EAAAM,YACAN,EAAAC,SAAAC,eAAA,gBACAF,EAAAO,aAAA,UAAAC,EAAAjB,EAAA,KAAAC,GAEA,QAAAiB,KACA1C,EAAA2C,GA3EA,GAGA9B,GAHA4B,EAAA,yDACAE,EAAA,mBACAhB,GAAA,CA2EAO,UAAAC,eAAA,UAAAS,iBAAA,QAAA9B,GAAA,GACA+B,OAAAC,OAAAJ","file":"./dist/js/bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\tvar twitterLink = 'https://twitter.com/intent/tweet?hashtags=quotes&text=';\n\tvar quoteURL = 'data/quotes.json';\n\tvar prevQuoteIndex = -1;\n\tvar quoteData;\n\tfunction getJSON(url) {\n\t    var xhr = new XMLHttpRequest(), response;\n\t    xhr.open('GET', url, true);\n\t    xhr.responseType = 'json';\n\t    xhr.onreadystatechange = function () {\n\t        handleXhrResponse(xhr);\n\t    };\n\t    xhr.send();\n\t}\n\tfunction handleXhrResponse(xhr) {\n\t    // 4 readState means the request is completed.\n\t    if (4 != xhr.readyState) {\n\t        // Do nothing if the request is not complete.\n\t        return;\n\t    }\n\t    if (null == xhr.response) {\n\t        alert('Error: no response from server');\n\t    }\n\t    if (200 != xhr.status) {\n\t        alert(\"Error: status \" + xhr.status);\n\t    }\n\t    // If no errors, load quote data and render initial quote\n\t    quoteData = xhr.response;\n\t    updateQuote();\n\t}\n\tfunction getRandomInt(min, max) {\n\t    min = Math.ceil(min);\n\t    max = Math.floor(max);\n\t    return Math.floor(Math.random() * (max - min)) + min;\n\t}\n\tfunction updateQuote() {\n\t    // Check quoteData is not null\n\t    if (quoteData === null || quoteData === undefined) {\n\t        alert('Something went wrong.');\n\t        return;\n\t    }\n\t    // Initialize local variables\n\t    var index, quote, author;\n\t    // Get a new random index\n\t    do {\n\t        index = getRandomInt(0, quoteData.length);\n\t    } while (index === prevQuoteIndex);\n\t    prevQuoteIndex = index;\n\t    // Get quote from quoteData\n\t    if (quoteData[index].hasOwnProperty('content') &&\n\t        quoteData[index].hasOwnProperty('title')) {\n\t        quote = quoteData[index].content;\n\t        author = quoteData[index].title;\n\t        renderQuoteToDOM(quote, author);\n\t        updateTweetLink(quote, author);\n\t    }\n\t}\n\tfunction renderQuoteToDOM(quote, author) {\n\t    // Render quote data to DOM\n\t    var elem;\n\t    elem = document.getElementById('quote');\n\t    elem.innerHTML = quote;\n\t    elem = document.getElementById('quote-author');\n\t    elem.innerHTML = '<strong><em>-'.concat(author).concat('</em></strong>');\n\t}\n\tfunction updateTweetLink(quote, author) {\n\t    // Build and update Tweet link\n\t    var elem;\n\t    // Strip HTML from quote string\n\t    elem = document.createElement('div');\n\t    elem.innerHTML = quote;\n\t    quote = elem.textContent;\n\t    elem = document.getElementById('tweet-button');\n\t    elem.setAttribute(\"href\", \"\" + twitterLink + quote + \" -\" + author);\n\t}\n\tfunction init() {\n\t    getJSON(quoteURL);\n\t}\n\tdocument.getElementById('button').addEventListener('click', updateQuote, false);\n\twindow.onload = init;\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// dist/js/bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 590b1e4898d01b29cfab","var twitterLink = 'https://twitter.com/intent/tweet?hashtags=quotes&text=';\nvar quoteURL = 'data/quotes.json';\nvar prevQuoteIndex = -1;\nvar quoteData;\nfunction getJSON(url) {\n    var xhr = new XMLHttpRequest(), response;\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n    xhr.onreadystatechange = function () {\n        handleXhrResponse(xhr);\n    };\n    xhr.send();\n}\nfunction handleXhrResponse(xhr) {\n    // 4 readState means the request is completed.\n    if (4 != xhr.readyState) {\n        // Do nothing if the request is not complete.\n        return;\n    }\n    if (null == xhr.response) {\n        alert('Error: no response from server');\n    }\n    if (200 != xhr.status) {\n        alert(\"Error: status \" + xhr.status);\n    }\n    // If no errors, load quote data and render initial quote\n    quoteData = xhr.response;\n    updateQuote();\n}\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nfunction updateQuote() {\n    // Check quoteData is not null\n    if (quoteData === null || quoteData === undefined) {\n        alert('Something went wrong.');\n        return;\n    }\n    // Initialize local variables\n    var index, quote, author;\n    // Get a new random index\n    do {\n        index = getRandomInt(0, quoteData.length);\n    } while (index === prevQuoteIndex);\n    prevQuoteIndex = index;\n    // Get quote from quoteData\n    if (quoteData[index].hasOwnProperty('content') &&\n        quoteData[index].hasOwnProperty('title')) {\n        quote = quoteData[index].content;\n        author = quoteData[index].title;\n        renderQuoteToDOM(quote, author);\n        updateTweetLink(quote, author);\n    }\n}\nfunction renderQuoteToDOM(quote, author) {\n    // Render quote data to DOM\n    var elem;\n    elem = document.getElementById('quote');\n    elem.innerHTML = quote;\n    elem = document.getElementById('quote-author');\n    elem.innerHTML = '<strong><em>-'.concat(author).concat('</em></strong>');\n}\nfunction updateTweetLink(quote, author) {\n    // Build and update Tweet link\n    var elem;\n    // Strip HTML from quote string\n    elem = document.createElement('div');\n    elem.innerHTML = quote;\n    quote = elem.textContent;\n    elem = document.getElementById('tweet-button');\n    elem.setAttribute(\"href\", \"\" + twitterLink + quote + \" -\" + author);\n}\nfunction init() {\n    getJSON(quoteURL);\n}\ndocument.getElementById('button').addEventListener('click', updateQuote, false);\nwindow.onload = init;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.ts\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}